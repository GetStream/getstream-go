// Code generated by GetStream internal OpenAPI code generator. DO NOT EDIT.
package getstream

type AddActivityRequest struct {
	Type             string            `json:"type"`
	Fids             []string          `json:"fids"`
	ExpiresAt        *string           `json:"expires_at"`
	ID               *string           `json:"id"`
	ParentID         *string           `json:"parent_id"`
	PollID           *string           `json:"poll_id"`
	Text             *string           `json:"text"`
	UserID           *string           `json:"user_id"`
	Visibility       *string           `json:"visibility"`
	VisibilityTag    *string           `json:"visibility_tag"`
	Attachments      []Attachment      `json:"attachments"`
	FilterTags       []string          `json:"filter_tags"`
	InterestTags     []string          `json:"interest_tags"`
	MentionedUserIds []string          `json:"mentioned_user_ids"`
	Custom           map[string]any    `json:"custom"`
	Location         *ActivityLocation `json:"location"`
	SearchData       map[string]any    `json:"search_data"`
}

type UpsertActivitiesRequest struct {
	Activities []ActivityRequest `json:"activities"`
}

type DeleteActivitiesRequest struct {
	ActivityIds []string     `json:"activity_ids"`
	HardDelete  *bool        `json:"hard_delete"`
	UserID      *string      `json:"user_id"`
	User        *UserRequest `json:"user"`
}

type QueryActivitiesRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type DeleteActivityRequest struct {
	HardDelete *bool `json:"-" query:"hard_delete"`
}

type GetActivityRequest struct {
}

type UpdateActivityPartialRequest struct {
	UserID *string        `json:"user_id"`
	Unset  []string       `json:"unset"`
	Set    map[string]any `json:"set"`
	User   *UserRequest   `json:"user"`
}

type UpdateActivityRequest struct {
	ExpiresAt    *Timestamp        `json:"expires_at"`
	PollID       *string           `json:"poll_id"`
	Text         *string           `json:"text"`
	UserID       *string           `json:"user_id"`
	Visibility   *string           `json:"visibility"`
	Attachments  []Attachment      `json:"attachments"`
	FilterTags   []string          `json:"filter_tags"`
	InterestTags []string          `json:"interest_tags"`
	Custom       map[string]any    `json:"custom"`
	Location     *ActivityLocation `json:"location"`
	User         *UserRequest      `json:"user"`
}

type DeleteBookmarkRequest struct {
	FolderID *string `json:"-" query:"folder_id"`
	UserID   *string `json:"-" query:"user_id"`
}

type UpdateBookmarkRequest struct {
	FolderID    *string           `json:"folder_id"`
	NewFolderID *string           `json:"new_folder_id"`
	UserID      *string           `json:"user_id"`
	Custom      map[string]any    `json:"custom"`
	NewFolder   *AddFolderRequest `json:"new_folder"`
	User        *UserRequest      `json:"user"`
}

type AddBookmarkRequest struct {
	FolderID  *string           `json:"folder_id"`
	UserID    *string           `json:"user_id"`
	Custom    map[string]any    `json:"custom"`
	NewFolder *AddFolderRequest `json:"new_folder"`
	User      *UserRequest      `json:"user"`
}

type CastPollVoteRequest struct {
	UserID *string      `json:"user_id"`
	User   *UserRequest `json:"user"`
	Vote   *VoteData    `json:"vote"`
}

type DeletePollVoteRequest struct {
	UserID *string `json:"-" query:"user_id"`
}

type AddReactionRequest struct {
	Type                       string         `json:"type"`
	CreateNotificationActivity *bool          `json:"create_notification_activity"`
	UserID                     *string        `json:"user_id"`
	Custom                     map[string]any `json:"custom"`
	User                       *UserRequest   `json:"user"`
}

type QueryActivityReactionsRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type DeleteActivityReactionRequest struct {
	UserID *string `json:"-" query:"user_id"`
}

type QueryBookmarkFoldersRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type DeleteBookmarkFolderRequest struct {
}

type UpdateBookmarkFolderRequest struct {
	Name   *string        `json:"name"`
	UserID *string        `json:"user_id"`
	Custom map[string]any `json:"custom"`
	User   *UserRequest   `json:"user"`
}

type QueryBookmarksRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type GetCommentsRequest struct {
	ObjectID     string  `json:"-" query:"object_id"`
	ObjectType   string  `json:"-" query:"object_type"`
	Depth        *int    `json:"-" query:"depth"`
	Sort         *string `json:"-" query:"sort"`
	RepliesLimit *int    `json:"-" query:"replies_limit"`
	Limit        *int    `json:"-" query:"limit"`
	Prev         *string `json:"-" query:"prev"`
	Next         *string `json:"-" query:"next"`
}

type AddCommentRequest struct {
	Comment                    string         `json:"comment"`
	ObjectID                   string         `json:"object_id"`
	ObjectType                 string         `json:"object_type"`
	CreateNotificationActivity *bool          `json:"create_notification_activity"`
	ParentID                   *string        `json:"parent_id"`
	UserID                     *string        `json:"user_id"`
	Attachments                []Attachment   `json:"attachments"`
	MentionedUserIds           []string       `json:"mentioned_user_ids"`
	Custom                     map[string]any `json:"custom"`
	User                       *UserRequest   `json:"user"`
}

type AddCommentsBatchRequest struct {
	Comments []AddCommentRequest `json:"comments"`
}

type QueryCommentsRequest struct {
	Filter map[string]any `json:"filter"`
	Limit  *int           `json:"limit"`
	Next   *string        `json:"next"`
	Prev   *string        `json:"prev"`
	Sort   *string        `json:"sort"`
}

type DeleteCommentRequest struct {
}

type GetCommentRequest struct {
}

type UpdateCommentRequest struct {
	Comment *string        `json:"comment"`
	Custom  map[string]any `json:"custom"`
}

type AddCommentReactionRequest struct {
	Type                       string         `json:"type"`
	CreateNotificationActivity *bool          `json:"create_notification_activity"`
	UserID                     *string        `json:"user_id"`
	Custom                     map[string]any `json:"custom"`
	User                       *UserRequest   `json:"user"`
}

type QueryCommentReactionsRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type DeleteCommentReactionRequest struct {
	UserID *string `json:"-" query:"user_id"`
}

type GetCommentRepliesRequest struct {
	Depth        *int    `json:"-" query:"depth"`
	Sort         *string `json:"-" query:"sort"`
	RepliesLimit *int    `json:"-" query:"replies_limit"`
	Limit        *int    `json:"-" query:"limit"`
	Prev         *string `json:"-" query:"prev"`
	Next         *string `json:"-" query:"next"`
}

type ListFeedGroupsRequest struct {
}

type CreateFeedGroupRequest struct {
	FeedGroupID       string              `json:"feed_group_id"`
	DefaultViewID     *string             `json:"default_view_id"`
	DefaultVisibility *string             `json:"default_visibility"`
	Custom            map[string]any      `json:"custom"`
	Notification      *NotificationConfig `json:"notification"`
}

type DeleteFeedGroupRequest struct {
	HardDelete *bool `json:"-" query:"hard_delete"`
}

type GetFeedGroupRequest struct {
}

type UpdateFeedGroupRequest struct {
	DefaultViewID *string             `json:"default_view_id"`
	Custom        map[string]any      `json:"custom"`
	Notification  *NotificationConfig `json:"notification"`
}

type DeleteFeedRequest struct {
	HardDelete *bool `json:"-" query:"hard_delete"`
}

type GetOrCreateFeedRequest struct {
	Limit                   *int               `json:"limit"`
	Next                    *string            `json:"next"`
	Prev                    *string            `json:"prev"`
	UserID                  *string            `json:"user_id"`
	View                    *string            `json:"view"`
	Watch                   *bool              `json:"watch"`
	ActivitySelectorOptions map[string]any     `json:"activity_selector_options"`
	Data                    *FeedInput         `json:"data"`
	ExternalRanking         map[string]any     `json:"external_ranking"`
	Filter                  map[string]any     `json:"filter"`
	FollowersPagination     *PagerRequest      `json:"followers_pagination"`
	FollowingPagination     *PagerRequest      `json:"following_pagination"`
	InterestWeights         map[string]float64 `json:"interest_weights"`
	MemberPagination        *PagerRequest      `json:"member_pagination"`
	User                    *UserRequest       `json:"user"`
}

type UpdateFeedRequest struct {
	CreatedByID *string        `json:"created_by_id"`
	Custom      map[string]any `json:"custom"`
}

type MarkActivityRequest struct {
	MarkAllRead *bool        `json:"mark_all_read"`
	MarkAllSeen *bool        `json:"mark_all_seen"`
	UserID      *string      `json:"user_id"`
	MarkRead    []string     `json:"mark_read"`
	MarkWatched []string     `json:"mark_watched"`
	User        *UserRequest `json:"user"`
}

type UnpinActivityRequest struct {
	UserID *string `json:"-" query:"user_id"`
}

type PinActivityRequest struct {
	UserID *string      `json:"user_id"`
	User   *UserRequest `json:"user"`
}

type UpdateFeedMembersRequest struct {
	Operation string              `json:"operation"`
	Limit     *int                `json:"limit"`
	Next      *string             `json:"next"`
	Prev      *string             `json:"prev"`
	Members   []FeedMemberRequest `json:"members"`
}

type AcceptFeedMemberInviteRequest struct {
	UserID *string      `json:"user_id"`
	User   *UserRequest `json:"user"`
}

type QueryFeedMembersRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type RejectFeedMemberInviteRequest struct {
	UserID *string      `json:"user_id"`
	User   *UserRequest `json:"user"`
}

type GetFollowSuggestionsRequest struct {
	Limit *int `json:"-" query:"limit"`
}

type ListFeedViewsRequest struct {
}

type CreateFeedViewRequest struct {
	ViewID             string                    `json:"view_id"`
	ActivityProcessors []ActivityProcessorConfig `json:"activity_processors"`
	ActivitySelectors  []ActivitySelectorConfig  `json:"activity_selectors"`
	Aggregation        *AggregationConfig        `json:"aggregation"`
	Ranking            *RankingConfig            `json:"ranking"`
}

type DeleteFeedViewRequest struct {
}

type GetFeedViewRequest struct {
}

type UpdateFeedViewRequest struct {
	ActivityProcessors []ActivityProcessorConfig `json:"activity_processors"`
	ActivitySelectors  []ActivitySelectorConfig  `json:"activity_selectors"`
	Aggregation        *AggregationConfig        `json:"aggregation"`
	Ranking            *RankingConfig            `json:"ranking"`
}

type CreateFeedsBatchRequest struct {
	Feeds []FeedRequest `json:"feeds"`
}

type FeedsQueryFeedsRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Watch  *bool              `json:"watch"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type UpdateFollowRequest struct {
	Source                     string         `json:"source"`
	Target                     string         `json:"target"`
	CreateNotificationActivity *bool          `json:"create_notification_activity"`
	FollowerRole               *string        `json:"follower_role"`
	PushPreference             *string        `json:"push_preference"`
	Custom                     map[string]any `json:"custom"`
}

type FollowRequest struct {
	Source                     string         `json:"source"`
	Target                     string         `json:"target"`
	CreateNotificationActivity *bool          `json:"create_notification_activity"`
	PushPreference             *string        `json:"push_preference"`
	Custom                     map[string]any `json:"custom"`
}

type AcceptFollowRequest struct {
	SourceFid    string  `json:"source_fid"`
	TargetFid    string  `json:"target_fid"`
	FollowerRole *string `json:"follower_role"`
}

type FollowBatchRequest struct {
	Follows []FollowRequest `json:"follows"`
}

type QueryFollowsRequest struct {
	Limit  *int               `json:"limit"`
	Next   *string            `json:"next"`
	Prev   *string            `json:"prev"`
	Sort   []SortParamRequest `json:"sort"`
	Filter map[string]any     `json:"filter"`
}

type RejectFollowRequest struct {
	SourceFid string `json:"source_fid"`
	TargetFid string `json:"target_fid"`
}

type UnfollowRequest struct {
}

type UnfollowBatchRequest struct {
	Follows []FollowPair `json:"follows"`
}

type DeleteFeedUserDataRequest struct {
}

type ExportFeedUserDataRequest struct {
}
